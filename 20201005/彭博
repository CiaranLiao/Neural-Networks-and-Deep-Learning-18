import numpy as np
import pandas as pd
path = r'C:\\Users\\70880\\Desktop\\ex1data2.txt'
data = pd.read_csv(path,names = ['daxiao','shuliang','jiage'])
data['daxiao'] = (data['daxiao'] - data['daxiao'].mean())/data['daxiao'].std()
data['shuliang'] = (data['shuliang'] - data['shuliang'].mean())/data['shuliang'].std()
data['jiage'] = (data['jiage'] - data['jiage'].mean())/data['jiage'].std()
def computeCost(X,Y,theta):
    m = X.shape[0]
    return np.sum(np.power((X*theta.T) - Y,2))/(2*m)
def gradientDescent(X,Y,theta,alpha,e):
    m = X.shape[0]
    cost = []
    for i in range(e):
        theta = theta - alpha/m*(X*theta.T - Y).T*X
        cost.append(computeCost(X,Y,theta))     
    return theta,cost
theta = np.matrix(np.zeros(3))
data.insert(0,'ones',1)
cols = data.shape[1]
X = np.matrix(data.iloc[:,0:cols-1])
Y = np.matrix(data.iloc[:,cols-1:cols])
alpha = 0.01
e = 1000
theta,cost = gradientDescent(X,Y,theta,alpha,e)
cost = computeCost(X,Y,theta)
print(cost)
